{"version":3,"sources":["webpack:///./src/templates/Post.tsx","webpack:///./config/SiteConfig.ts","webpack:///./src/utils/media.ts","webpack:///./src/components/Date.tsx","webpack:///./src/components/Nav.tsx","webpack:///./src/components/Subline.tsx","webpack:///./src/components/Article.tsx","webpack:///./src/components/Button.tsx","webpack:///./src/components/Header.tsx","webpack:///./config/Theme.ts","webpack:///./src/components/Layout.tsx","webpack:///./src/components/PrevNext.tsx","webpack:///./src/components/SectionTitle.tsx","webpack:///./src/components/SEO.tsx","webpack:///./src/components/Wrapper.tsx","webpack:///./src/components/Content.tsx","webpack:///./src/components/Title.tsx","webpack:///./src/components/Pagination.tsx","webpack:///./src/components/index.tsx"],"names":["PostContent","styled","div","withConfig","displayName","componentId","PostPage","render","_this$props$pathConte","this","props","pathContext","prev","next","post","data","markdownRemark","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components__WEBPACK_IMPORTED_MODULE_6__","Fragment","postPath","fields","slug","postNode","postSEO","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","title","frontmatter","config","siteTitle","banner","light","_components_Date__WEBPACK_IMPORTED_MODULE_9__","date","timeToRead","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","kebabCase","category","dangerouslySetInnerHTML","__html","html","tags","map","tag","i","key","length","React","PureComponent","postQuery","__webpack_exports__","pathPrefix","siteTitleAlt","siteUrl","siteLanguage","siteBanner","defaultBg","favicon","siteDescription","author","siteLogo","userTwitter","ogSiteName","ogLanguage","themeColor","backgroundColor","headerFontFamily","bodyFontFamily","baseFontSize","siteFBAppID","Google_Tag_Manager_ID","POST_PER_PAGE","__webpack_require__","d","media","tablet","phone","DateStyled","span","theme","colors","primary","Date","_ref","replace","Nav","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","styled_components__WEBPACK_IMPORTED_MODULE_1__","_reach_router__WEBPACK_IMPORTED_MODULE_2__","NavStyled","nav","Subline","fontSize","small","rgba","white","sectionTitle","Post","article","Title","h2","Initiale","Excerpt","p","Article","_React$PureComponent","apply","arguments","inheritsLoose_default","prototype","_this$props","excerpt","firstChar","charAt","react_default","gatsby_browser_entry","components_Date","button","big","transitions","normal","curriedDarken","HeaderWrapper","header","Content","direction","justify","HeaderTitle","fontFamily","heading","Header","children","bg","grey","dark","default","ultraLight","GlobalStyle","createGlobalStyle","_templateObject","Footer","footer","Layout","query","styled_components_browser_esm","split","site","buildTime","_1536950682","Wrapper","Prev","Next","PrevNext","SectionTitle","uppercase","SEO","description","image","postURL","realPrefix","blogURL","schemaOrgJSONLD","@context","@type","@id","url","name","alternateName","headline","datePublished","dateModified","publisher","logo","isPartOf","mainEntityOfPage","Helmet_default","lang","content","type","JSON","stringify","property","fullWidth","h3","PaginationContainer","PaginationContent","Pagination","currentPage","totalPages","isFirst","isLast","prevPage","toString","nextPage","className","rel","Array","from","_","Article_Article","Header_Header","Layout_Layout","PrevNext_PrevNext","SEO_SEO","Wrapper_Wrapper","Content_Content","Title_Title","Pagination_Pagination"],"mappings":"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","file":"component---src-templates-post-tsx-1fd066c241b04f64b911.js","sourcesContent":["import React from 'react';\nimport Helmet from 'react-helmet';\nimport { Link, graphql } from 'gatsby';\nimport styled from 'styled-components';\nimport kebabCase from 'lodash/kebabCase';\nimport { Layout, Wrapper, Header, Subline, SEO, PrevNext, SectionTitle, Content } from '../components';\nimport config from '../../config/SiteConfig';\nimport '../utils/prismjs-theme.css';\nimport PathContext from '../models/PathContext';\nimport Post from '../models/Post';\nimport { Date } from '../components/Date';\n\nconst PostContent = styled.div`\n  margin-top: 1rem;\n  max-width: 40rem;\n  line-height: 1.8;\n`;\n\ninterface Props {\n  data: {\n    markdownRemark: Post;\n  };\n  pathContext: PathContext;\n}\n\nexport default class PostPage extends React.PureComponent<Props> {\n  public render() {\n    const { prev, next } = this.props.pathContext;\n    const post = this.props.data.markdownRemark;\n    return (\n      <Layout>\n        {post ? (\n          <>\n            <SEO postPath={post.fields.slug} postNode={post} postSEO />\n            <Helmet title={`${post.frontmatter.title} | ${config.siteTitle}`} />\n            <Header banner={post.frontmatter.banner}>\n              <SectionTitle>{post.frontmatter.title}</SectionTitle>\n              <Subline light={false}>\n                <Date date={post.frontmatter.date} />\n                <br />\n                {post.timeToRead} Min Read\n                <br />\n                <Link to={`/categories/${kebabCase(post.frontmatter.category)}`}>{post.frontmatter.category}</Link>\n              </Subline>\n            </Header>\n            <Wrapper>\n              <Content>\n                <PostContent dangerouslySetInnerHTML={{ __html: post.html }} />\n                {post.frontmatter.tags ? (\n                  <Subline>\n                    Tags: &#160;\n                    {post.frontmatter.tags.map((tag, i) => (\n                      <Link key={i} to={`/tags/${kebabCase(tag)}`}>\n                        <strong>{tag}</strong> {i < post.frontmatter.tags.length - 1 ? `, ` : ``}\n                      </Link>\n                    ))}\n                  </Subline>\n                ) : null}\n                <PrevNext prev={prev} next={next} />\n              </Content>\n            </Wrapper>\n          </>\n        ) : null}\n      </Layout>\n    );\n  }\n}\n\nexport const postQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        date(formatString: \"DD.MM.YYYY\")\n        category\n        tags\n        banner\n      }\n      timeToRead\n    }\n  }\n`;\n","export default {\n  pathPrefix: '/', // Prefix for all links. If you deploy your site to example.com/portfolio your pathPrefix should be \"portfolio\"\n\n  siteTitle: `Inside a Developer's Head`, // Navigation and Site Title\n  siteTitleAlt: 'Typescript Power Blog - Gatsby Starter', // Alternative Site title for SEO\n  siteUrl: 'https://jquintanab.com', // Domain of your site. No trailing slash!\n  siteLanguage: 'en', // Language Tag on <html> element\n  siteBanner: '/assets/banner.jpg', // Your image for og:image tag. You can find it in the /static folder\n  defaultBg: '/assets/bg.png', // default post background header\n  favicon: 'src/favicon.png', // Your image for favicons. You can find it in the /src folder\n  siteDescription: `Inside a Developer's Head`, // Your site description\n  author: 'Jesús Quintana', // Author for schemaORGJSONLD\n  siteLogo: '/assets/logo.png', // Image for schemaORGJSONLD\n\n  // siteFBAppID: '123456789', // Facebook App ID - Optional\n  userTwitter: '@marduke182', // Twitter Username - Optional\n  ogSiteName: 'marduke', // Facebook Site Name - Optional\n  ogLanguage: 'en_US', // Facebook Language\n\n  // Manifest and Progress color\n  // See: https://developers.google.com/web/fundamentals/web-app-manifest/\n  themeColor: '#3498DB',\n  backgroundColor: '#2b2e3c',\n\n  // Settings for typography.ts\n  headerFontFamily: 'Lato',\n  bodyFontFamily: 'Merriweather',\n  baseFontSize: '18px',\n\n  // Social media\n  siteFBAppID: '',\n\n  //\n  Google_Tag_Manager_ID: 'GTM-NQZ5DVX',\n  POST_PER_PAGE: 4,\n};\n","const sizes = {\n  tablet: '1200px',\n  phone: '600px',\n};\n\nexport const media = {\n  tablet: `(max-width: ${sizes.tablet})`,\n  phone: `(max-width: ${sizes.phone})`,\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst DateStyled: any = styled.span`\n  color: ${props => props.theme.colors.primary};\n`;\n\ntype Props = {\n  date: string;\n};\n\nexport const Date = ({ date }: Props) => {\n  return <DateStyled>{date.replace(/\\./g, '/')}</DateStyled>;\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from '@reach/router';\n\nconst NavStyled: any = styled.nav`\n  display: flex;\n  flex-direction: row;\n\n  & > a {\n    padding-left: 1rem;\n  }\n`;\n\nexport const Nav: React.FunctionComponent = () => (\n  <NavStyled>\n    <Link to=\"/about-me\">About Me</Link>\n    <Link to=\"/resume\">Resume</Link>\n    <Link to=\"/blog\">Blog</Link>\n  </NavStyled>\n);\n","import styled from 'styled-components';\nimport rgba from 'polished/lib/color/rgba';\n\ninterface Props {\n  theme: {\n    fontSize: {\n      small: number;\n      big: number;\n    };\n    colors: {\n      white: string;\n      grey: {\n        light: string;\n      };\n    };\n  };\n  sectionTitle: string;\n  light: boolean;\n}\n\nexport const Subline: any = styled.div`\n  font-size: ${(props: Props) => props.theme.fontSize.small};\n  ${(props: Props) => props.light && `color: ${rgba(props.theme.colors.white, 0.7)}`};\n  ${(props: Props) => props.sectionTitle && 'text-align: center'};\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\nimport { Subline } from './Subline';\nimport { Date } from './Date';\n\nconst Post = styled.article`\n  display: flex;\n  flex-direction: column;\n  margin-top: 3.5rem;\n  margin-bottom: 3.5rem;\n`;\n\nconst Title = styled.h2`\n  position: relative;\n  text-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);\n  margin-bottom: 0.75rem;\n`;\n\nconst Initiale = styled.span`\n  position: absolute;\n  font-size: 7rem;\n  transform: translate(-50%, -50%);\n  opacity: 0.08;\n  user-select: none;\n  z-index: -1;\n`;\n\nconst Excerpt = styled.p`\n  grid-column: -1 / 1;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n`;\n\ninterface Props {\n  title: string;\n  date: string;\n  excerpt: string;\n  slug: string;\n  timeToRead: number;\n  category: string;\n}\n\nexport class Article extends React.PureComponent<Props> {\n  public render() {\n    const { title, date, excerpt, slug, timeToRead, category } = this.props;\n    const firstChar = title.charAt(0);\n\n    return (\n      <Post>\n        <Title>\n          <Initiale>{firstChar}</Initiale>\n          <Link to={`/blog/${slug}`}>{title}</Link>\n        </Title>\n        <Subline>\n          <Date date={date} /> &mdash; {timeToRead} Min Read &mdash; In\n          <Link to={`/categories/${kebabCase(category)}`}> {category}</Link>\n        </Subline>\n        <Excerpt>{excerpt}</Excerpt>\n      </Post>\n    );\n  }\n}\n","import styled from 'styled-components';\nimport curriedDarken from 'polished/lib/color/darken';\n\nexport const Button: any = styled.button`\n  background: ${props => props.theme.colors.primary};\n  border: none;\n  display: inline-flex;\n  align-items: center;\n  margin: 0 0.5rem;\n  border-radius: ${(props: any) => (props.big ? '1.5rem' : '1rem')};\n  font-size: ${(props: any) => (props.big ? '1.2rem' : '1rem')};\n  color: white;\n  padding: ${(props: any) => (props.big ? '0.35rem 1.6rem' : '0.25rem 1.5rem')};\n  transition: all ${(props: any) => props.theme.transitions.normal};\n  box-shadow: 0 4px 6px rgba(50, 50, 93, 0.11), 0 1px 3px rgba(0, 0, 0, 0.08);\n  &:hover {\n    background: ${(props: any) => curriedDarken(0.3, props.theme.colors.primary)};\n    cursor: pointer;\n    transform: translateY(-2px);\n  }\n  &:focus {\n    outline: none;\n  }\n  svg {\n    width: 20px;\n    height: 20px;\n    margin-right: 0.75rem;\n    fill: white;\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport config from '../../config/SiteConfig';\nimport { Link } from 'gatsby';\nimport { Theme } from '../../config/Theme';\nimport { Nav } from './Nav';\nimport { JustifyContentProperty } from 'csstype';\n\nconst HeaderWrapper: any = styled.header`\n  padding: 2rem 1rem 0.5rem;\n  text-align: left;\n`;\n\nconst Content = styled.div<{ direction?: 'row' | 'column', justify?: JustifyContentProperty }>`\n  z-index: 999;\n  max-width: 40rem;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: ${props => (props.direction ? props.direction : 'row')};\n  justify-content: ${props => props.justify};\n  a {\n    &:hover {\n      opacity: 0.85;\n    }\n  }\n`;\n\nconst HeaderTitle = styled.span`\n  font-size: 1.8rem;\n  font-family: ${(props: { theme: Theme }) => props.theme.fontFamily.heading};\n  font-weight: 900;\n`;\n\ninterface Props {\n  children: any;\n  banner?: string;\n}\n\nexport class Header extends React.PureComponent<Props> {\n  public render() {\n    return (\n      <HeaderWrapper banner={this.props.banner || config.defaultBg}>\n        <Content justify=\"space-between\">\n          <div>\n            <HeaderTitle>Jesús Quintana</HeaderTitle>\n            <br />\n            <Link to=\"/\">{config.siteTitle}</Link>\n          </div>\n          <Nav />\n        </Content>\n        <br />\n        <Content direction=\"column\">{this.props.children}</Content>\n      </HeaderWrapper>\n    );\n  }\n}\n","const colors = {\n  primary: '#ff6200', // Color for buttons or links\n  bg: '#fff', // Background color\n  white: '#fff',\n  grey: {\n    dark: 'rgba(0, 0, 0, 0.9)',\n    default: 'rgba(0, 0, 0, 0.7)',\n    light: 'rgba(0, 0, 0, 0.5)',\n    ultraLight: 'rgba(0, 0, 0, 0.25)',\n  },\n};\n\nconst transitions = {\n  normal: '0.5s',\n};\n\nconst fontSize = {\n  small: '0.9rem',\n  big: '1.8rem',\n};\n\nconst fontFamily = {\n  heading: '\"Lato\",\"Helvetica Neue\",Helvetica,sans-serif',\n  normal: '\"Merriweather\",\"PT Serif\",Georgia,\"Times New Roman\",serif',\n};\n\nexport type Theme = {\n  fontFamily: {\n    heading: string;\n    normal: string;\n  };\n  fontSize: {\n    small: string;\n    big: string;\n  };\n  transitions: {\n    normal: string;\n  };\n  colors: {\n    primary: string;\n    bg: string;\n    white: string;\n    grey: {\n      dark: string;\n      default: string;\n      light: string;\n      ultraLight: string;\n    };\n  };\n};\n\nconst theme: Theme = {\n  colors,\n  transitions,\n  fontSize,\n  fontFamily,\n};\nexport default theme;\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport styled, { ThemeProvider, createGlobalStyle } from 'styled-components';\nimport theme from '../../config/Theme';\nimport { media } from '../utils/media';\nimport split from 'lodash/split';\nimport './layout.scss';\n\nconst GlobalStyle = createGlobalStyle`\n  ::selection {\n    color: ${theme.colors.bg};\n    background: ${theme.colors.primary};\n  }\n  body {\n    background: ${theme.colors.bg};\n    color: ${theme.colors.grey.default};\n    font-family: ${theme.fontFamily.normal};\n    @media ${media.phone} {\n      font-size: 14px;\n    }\n  }\n  a {\n    color: ${theme.colors.primary};\n    text-decoration: none;\n  }\n  h1, h2, h3, h4 {\n    color: ${theme.colors.grey.dark};\n    font-family: ${theme.fontFamily.heading};\n    font-weight: bold;\n  }\n  \n  blockquote {\n    font-style: italic;\n    position: relative;\n  }\n\n  blockquote:before {\n    content: \"\";\n    position: absolute;\n    background: ${theme.colors.primary};\n    height: 100%;\n    width: 6px;\n    margin-left: -1.6rem;\n  }\n  label {\n    margin-bottom: .5rem;\n    color: ${theme.colors.grey.dark};\n  }\n  input, textarea {\n    border-radius: .5rem;\n    border: none;\n    background: rgba(0, 0, 0, 0.05);\n    padding: .25rem 1rem;\n    &:focus {\n      outline: none;\n    }\n  }\n  .textRight {\n    text-align:right;\n  }\n  .gatsby-highlight {\n    margin-bottom: 1rem;\n  }\n`;\n\nconst Footer = styled.footer`\n  text-align: center;\n  padding: 3rem 0;\n  span {\n    font-size: 0.75rem;\n  }\n`;\n\nexport class Layout extends React.PureComponent<{}> {\n  public render() {\n    const { children } = this.props;\n\n    return (\n      <StaticQuery\n        query={graphql`\n          query LayoutQuery {\n            site {\n              buildTime(formatString: \"DD.MM.YYYY\")\n            }\n          }\n        `}\n        render={data => (\n          <ThemeProvider theme={theme}>\n            <React.Fragment>\n              <GlobalStyle />\n              {children}\n              <Footer>\n                &copy; {split(data.site.buildTime, '.')[2]} by Jesús Quintana. <br />\n                <span>Last build: {data.site.buildTime}</span>\n              </Footer>\n            </React.Fragment>\n          </ThemeProvider>\n        )}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\nimport Post from '../models/Post';\n\nconst Wrapper = styled.div`\n  display: flex;\n  margin: 6rem auto 0 auto;\n  a {\n    color: ${props => props.theme.colors.primary};\n    display: flex;\n    align-items: center;\n  }\n  justify-items: center;\n`;\n\nconst Prev = styled.div`\n  span {\n    text-transform: uppercase;\n    font-size: 0.8rem;\n    color: ${props => props.theme.colors.grey.light};\n  }\n`;\n\nconst Next = styled.div`\n  margin-left: auto;\n  text-align: right;\n  span {\n    text-transform: uppercase;\n    font-size: 0.8rem;\n    color: ${props => props.theme.colors.grey.light};\n  }\n`;\n\ninterface Props {\n  next: Post;\n  prev: Post;\n}\n\nexport class PrevNext extends React.PureComponent<Props> {\n  public render() {\n    const { prev, next } = this.props;\n    return (\n      <Wrapper>\n        {prev && (\n          <Prev>\n            <span>Previous</span>\n            <Link to={`/blog/${kebabCase(prev.frontmatter.title)}`}>{prev.frontmatter.title}</Link>\n          </Prev>\n        )}\n        {next && (\n          <Next>\n            <span>Next</span>\n            <Link to={`/blog/${kebabCase(next.frontmatter.title)}`}>{next.frontmatter.title}</Link>\n          </Next>\n        )}\n      </Wrapper>\n    );\n  }\n}\n","import styled from 'styled-components';\n\nexport const SectionTitle: any = styled.div`\n  font-size: ${props => props.theme.fontSize.big};\n  font-family: ${props => props.theme.fontFamily.heading};\n  font-weight: 600;\n  text-transform: ${(props: any) => (props.uppercase ? 'uppercase' : 'normal')};\n  text-align: left;\n  position: relative;\n  line-height: 1.25;\n  padding: 1rem 0 0;\n  margin-bottom: 1rem;\n  &:after {\n    content: '';\n    height: 1px;\n    width: 50px;\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n    margin-left: -25px;\n    background: ${props => props.theme.colors.white};\n  }\n`;\n","/* eslint-disable react/require-default-props */\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport config from '../../config/SiteConfig';\nimport Post from '../models/Post';\n\ninterface SEO {\n  postNode: Post;\n  postPath: string;\n  postSEO: boolean;\n}\n\nexport const SEO = (props: SEO) => {\n  const { postNode, postPath, postSEO } = props;\n  let title;\n  let description;\n  let image;\n  let postURL;\n  const realPrefix = config.pathPrefix === '/' ? '' : config.pathPrefix;\n  if (postSEO) {\n    const postMeta = postNode.frontmatter;\n    title = postMeta.title;\n    description = postNode.excerpt;\n    image = config.siteBanner;\n    postURL = config.siteUrl + realPrefix + postPath;\n  } else {\n    title = config.siteTitle;\n    description = config.siteDescription;\n    image = config.siteBanner;\n  }\n  image = config.siteUrl + realPrefix + image;\n  const blogURL = config.siteUrl + config.pathPrefix;\n  let schemaOrgJSONLD = [\n    {\n      '@context': 'http://schema.org',\n      '@type': 'WebSite',\n      '@id': blogURL,\n      url: blogURL,\n      name: title,\n      alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n    },\n  ];\n  if (postSEO) {\n    schemaOrgJSONLD = [\n      {\n        '@context': 'http://schema.org',\n        '@type': 'BlogPosting',\n        // @ts-ignore\n        '@id': postURL,\n        // @ts-ignore\n        url: postURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n        headline: title,\n        image: {\n          '@type': 'ImageObject',\n          url: image,\n        },\n        description: config.siteDescription,\n        datePublished: postNode.frontmatter.date,\n        dateModified: postNode.frontmatter.date,\n        author: {\n          '@type': 'Person',\n          name: config.author,\n        },\n        publisher: {\n          '@type': 'Organization',\n          name: config.author,\n          logo: {\n            '@type': 'ImageObject',\n            url: config.siteUrl + realPrefix + config.siteLogo,\n          },\n        },\n        isPartOf: blogURL,\n        mainEntityOfPage: {\n          '@type': 'WebSite',\n          '@id': blogURL,\n        },\n      },\n    ];\n  }\n  return (\n    <Helmet>\n      <html lang={config.siteLanguage} />\n      <title>{config.siteTitle}</title>\n      <meta name=\"description\" content={description} />\n      <meta name=\"image\" content={image} />\n      <script type=\"application/ld+json\">{JSON.stringify(schemaOrgJSONLD)}</script>\n      <meta property=\"og:locale\" content={config.ogLanguage} />\n      <meta property=\"og:site_name\" content={config.ogSiteName ? config.ogSiteName : ''} />\n      <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n      {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n      <meta property=\"fb:app_id\" content={config.siteFBAppID ? config.siteFBAppID : ''} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:creator\" content={config.userTwitter ? config.userTwitter : ''} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:url\" content={config.siteUrl} />\n      <meta name=\"twitter:description\" content={description} />\n      <meta name=\"twitter:image\" content={image} />\n    </Helmet>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper: any = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 0 auto;\n  max-width: ${(props: any) => (props.fullWidth ? '100%' : '40')};\n  padding: ${(props: any) => (props.fullWidth ? '0' : '0 1rem')};\n`;\n","import styled from 'styled-components';\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  z-index: 9000;\n  max-width: 40rem;\n  form {\n    p {\n      label,\n      input {\n        display: block;\n      }\n      input {\n        min-width: 275px;\n      }\n      textarea {\n        resize: vertical;\n        min-height: 150px;\n        width: 100%;\n      }\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Title = styled.h3`\n  position: relative;\n  text-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);\n  margin-bottom: 0.75rem;\n`;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport { media } from '../utils/media';\nimport theme from '../../config/Theme';\nimport curriedDarken from 'polished/lib/color/darken';\n\nexport const PaginationContainer = styled.div`\n  text-align: center;\n  margin: 2rem;\n  }\n`;\n\nexport const PaginationContent = styled.div`\n    display: inline-block;\n    padding: 0 2.5rem;\n    border-radius: 3.5rem;\n    background-color: #eee;\n    \n     @media ${media.phone} {\n      padding: 0 1rem;\n     }\n\n    .page-numbers {\n      display: block;\n      float:left;\n      transition: 400ms ease;\n      color: ${theme.colors.grey.light};\n      letter-spacing: 0.1em;\n      padding: 1rem;\n\n      &:hover,\n      &.current {\n        background-color: ${curriedDarken(0.2, theme.colors.primary)};\n        color: ${theme.colors.white};\n      }\n      \n      &.prev {\n        margin-left: -1.5rem;\n      }\n      \n      &.next {\n        margin-right: -1.5rem;\n      }\n\n      &.prev:hover,\n      &.next:hover {\n        background-color: transparent;\n        color: ${curriedDarken(0.2, theme.colors.primary)};\n      }\n      \n\n      @media ${media.tablet} {\n        padding: 0 1.4rem;\n        display: none;\n\n        &:nth-of-type(2) {\n          position: relative;\n          padding-right: 5rem;\n\n          &::after {\n            content: '...';\n            position: absolute;\n            top: 0;\n            left: 4.5rem;\n          }\n        }\n\n        &:nth-child(-n + 3),\n        &:nth-last-child(-n + 3) {\n          display: block;\n        }\n\n        &:nth-last-child(-n + 4) {\n          padding-right: 1.4rem;\n\n          &::after {\n            content: none;\n          }\n        }\n      }\n    `;\n\ninterface Props {\n  currentPage: number;\n  totalPages: number;\n  url: string;\n}\n\nexport class Pagination extends React.PureComponent<Props> {\n  public render() {\n    const { currentPage, totalPages, url } = this.props;\n    const isFirst = currentPage === 1;\n    const isLast = currentPage === totalPages;\n    const prevPage = currentPage - 1 === 1 ? `/${url}/` : `/${url}/${(currentPage - 1).toString()}`;\n    const nextPage = `/${url}/${(currentPage + 1).toString()}`;\n    return totalPages > 1 ? (\n      <PaginationContainer>\n        <PaginationContent>\n          {!isFirst && (\n            <Link className=\"prev page-numbers\" to={prevPage} rel=\"prev\">\n              ← Prev\n            </Link>\n          )}\n          {Array.from({ length: totalPages }, (_, i) => (\n            <Link\n              className={currentPage === i + 1 ? 'page-numbers current' : 'page-numbers'}\n              key={`pagination-number${i + 1}`}\n              to={`/${url}/${i === 0 ? '' : i + 1}`}\n            >\n              {i + 1}\n            </Link>\n          ))}\n          {!isLast && (\n            <Link className=\"next page-numbers\" to={nextPage} rel=\"next\">\n              Next →\n            </Link>\n          )}\n        </PaginationContent>\n      </PaginationContainer>\n    ) : null;\n  }\n}\n","export * from './Article';\nexport * from './Button';\nexport * from './Header';\nexport * from './Layout';\nexport * from './PrevNext';\nexport * from './SectionTitle';\nexport * from './SEO';\nexport * from './Subline';\nexport * from './Wrapper';\nexport * from './Content';\nexport * from './Title';\nexport * from './Pagination';\n"],"sourceRoot":""}